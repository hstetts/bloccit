class PostsController < ApplicationController
  def index
    #declare instance variable @posts and assign it to a collection
    #of Post objects using all method provided by ActiveRecord
    #all returns a collection of Post objects
    @posts = Post.all
  end

  def show
    #find the post that corresponds to the id in the params that was passed to  show and assign it to @post.
    #Unlike in the index method, in the show method, we populate an instance variable with a single post, rather than a collection of posts.
    @post = Post.find(params[:id])
  end

  def new
    #create an instance variable, @post, and assign it to an empty post returned by Post.new
    @post = Post.new
  end

  #when user clicks save, create method is called.
  #unlike new, create does not have corresponding view
  #works behind the scenes to collect data and update DB. POST action.
  def create
    #call Post.new to create a new instance of Post
    @post = Post.new
    @post.title = params[:post][:title]
    @post.body = params[:post][:body]

   #if we successfully save Post to DB, display a success message using flash[:notice]
   #and redirect user to the route generated by @post. Redirecting to @post will direct user to the posts show view
   if @post.save

     #assign value to flash[:notice]. flash hash is a way to pass temporary values between actions
     #any value in flash will be available in next action an deleted
     flash[:notice] = "Post was saved."
     redirect_to @post
   else
     #if not successfully saved to Post to DB, display error message
     #and render new view again
     flash.now[:alert] = "There was an error saving the post. Please try again."
     render :new
   end
  end

  def edit
  end
end
